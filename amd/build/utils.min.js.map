{"version":3,"file":"utils.min.js","sources":["../src/utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny AI utils library.\n *\n * @module      tiny_ai/utils\n * @copyright   2024, ISB Bayern\n * @author      Dr. Peter Mayer\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalEvents from 'core/modal_events';\nimport Renderer from 'tiny_ai/renderer';\nimport DataManager from 'tiny_ai/datamanager';\nimport ImggenHandler from 'tiny_ai/datahandler/imggen';\nimport OptimizeHandler from 'tiny_ai/datahandler/optimize';\nimport StartHandler from 'tiny_ai/datahandler/start';\nimport SummarizeHandler from 'tiny_ai/datahandler/summarize';\nimport TranslateHandler from 'tiny_ai/datahandler/translate';\nimport TtsHandler from 'tiny_ai/datahandler/tts';\nimport IttHandler from 'tiny_ai/datahandler/itt';\nimport {alert as moodleAlert, exception as displayException} from 'core/notification';\nimport {getString} from 'core/str';\nimport {makeRequest} from 'local_ai_manager/make_request';\nimport * as BasedataHandler from 'tiny_ai/datahandler/basedata';\nimport $ from 'jquery';\nimport Log from 'core/log';\nimport EditorUtils from 'tiny_ai/editor_utils';\n\nconst objectStore = {};\n\nexport const init = async(uniqid, editor) => {\n    if (!objectStore.hasOwnProperty(uniqid)) {\n        objectStore[uniqid] = {};\n        // The order in which these objects are being created is actually pretty important, because Renderer\n        // object depends on DataManager object.\n        objectStore[uniqid].editorUtils = new EditorUtils(uniqid, editor);\n        objectStore[uniqid].datamanager = new DataManager(uniqid);\n        await BasedataHandler.init();\n        objectStore[uniqid].imggenhandler = new ImggenHandler(uniqid);\n        objectStore[uniqid].optimizehandler = new OptimizeHandler(uniqid);\n        objectStore[uniqid].starthandler = new StartHandler(uniqid);\n        await objectStore[uniqid].starthandler.init();\n        objectStore[uniqid].summarizehandler = new SummarizeHandler(uniqid);\n        objectStore[uniqid].translatehandler = new TranslateHandler(uniqid);\n        objectStore[uniqid].ttshandler = new TtsHandler(uniqid);\n        objectStore[uniqid].itthandler = new IttHandler(uniqid);\n        objectStore[uniqid].renderer = new Renderer(uniqid);\n    }\n};\n\nexport const getAiAnswer = async(prompt, purpose, options = {}) => {\n    let result = null;\n    try {\n        result = await makeRequest(purpose, prompt, options);\n    } catch (exception) {\n        await displayException(exception);\n        return null;\n    }\n    if (result.code !== 200) {\n        const alertTitle = await getString('errorwithcode', 'tiny_ai', result.code);\n        const parsedResult = JSON.parse(result.result);\n        if (parsedResult.debuginfo) {\n            Log.error(parsedResult.debuginfo);\n        }\n        await errorAlert(parsedResult.message, alertTitle);\n        return null;\n    }\n    return result.result;\n};\n\nexport const errorAlert = async(message, title = null) => {\n    if (title === null) {\n        title = BasedataHandler.getTinyAiString('generalerror');\n    }\n    const alertModal = await moodleAlert(title, message);\n    alertModal.getRoot().on(ModalEvents.hidden, () => {\n        document.querySelectorAll('button[data-action]').forEach(button => {\n            $(button).tooltip('hide');\n        });\n    });\n};\n\nexport const stripHtmlTags = (textWithTags) => {\n    // Place selected content into a temporary span and extract the plain text from it to strip HTML tags.\n    const span = document.createElement('span');\n    span.innerHTML = textWithTags;\n    return span.textContent;\n};\n\nexport const getEditorUtils = (uniqid) => {\n    return objectStore[uniqid].editorUtils;\n};\n\nexport const getRenderer = (uniqid) => {\n    return objectStore[uniqid].renderer;\n};\n\nexport const getDatamanager = (uniqid) => {\n    return objectStore[uniqid].datamanager;\n};\n\nexport const getImggenHandler = (uniqid) => {\n    return objectStore[uniqid].imggenhandler;\n};\n\nexport const getOptimizeHandler = (uniqid) => {\n    return objectStore[uniqid].optimizehandler;\n};\n\nexport const getStartHandler = (uniqid) => {\n    return objectStore[uniqid].starthandler;\n};\n\nexport const getSummarizeHandler = (uniqid) => {\n    return objectStore[uniqid].summarizehandler;\n};\n\nexport const getTranslateHandler = (uniqid) => {\n    return objectStore[uniqid].translatehandler;\n};\n\nexport const getTtsHandler = (uniqid) => {\n    return objectStore[uniqid].ttshandler;\n};\n\nexport const getIttHandler = (uniqid) => {\n    return objectStore[uniqid].itthandler;\n};\n\nexport const getCurrentModalUniqId = (element) => {\n    return element.closest('[data-tiny_instance_uniqid]').dataset.tiny_instance_uniqid;\n};\n"],"names":["objectStore","async","uniqid","editor","hasOwnProperty","editorUtils","EditorUtils","datamanager","DataManager","BasedataHandler","init","imggenhandler","ImggenHandler","optimizehandler","OptimizeHandler","starthandler","StartHandler","summarizehandler","SummarizeHandler","translatehandler","TranslateHandler","ttshandler","TtsHandler","itthandler","IttHandler","renderer","Renderer","prompt","purpose","options","result","exception","code","alertTitle","parsedResult","JSON","parse","debuginfo","error","errorAlert","message","title","getTinyAiString","alertModal","getRoot","on","ModalEvents","hidden","document","querySelectorAll","forEach","button","tooltip","textWithTags","span","createElement","innerHTML","textContent","element","closest","dataset","tiny_instance_uniqid"],"mappings":";;;;;;;;2oDA0CMA,YAAc,iBAEAC,MAAMC,OAAQC,UACzBH,YAAYI,eAAeF,UAC5BF,YAAYE,QAAU,GAGtBF,YAAYE,QAAQG,YAAc,IAAIC,sBAAYJ,OAAQC,QAC1DH,YAAYE,QAAQK,YAAc,IAAIC,qBAAYN,cAC5CO,gBAAgBC,OACtBV,YAAYE,QAAQS,cAAgB,IAAIC,gBAAcV,QACtDF,YAAYE,QAAQW,gBAAkB,IAAIC,kBAAgBZ,QAC1DF,YAAYE,QAAQa,aAAe,IAAIC,eAAad,cAC9CF,YAAYE,QAAQa,aAAaL,OACvCV,YAAYE,QAAQe,iBAAmB,IAAIC,mBAAiBhB,QAC5DF,YAAYE,QAAQiB,iBAAmB,IAAIC,mBAAiBlB,QAC5DF,YAAYE,QAAQmB,WAAa,IAAIC,aAAWpB,QAChDF,YAAYE,QAAQqB,WAAa,IAAIC,aAAWtB,QAChDF,YAAYE,QAAQuB,SAAW,IAAIC,kBAASxB,+BAIzBD,eAAM0B,OAAQC,aAASC,+DAAU,GACpDC,OAAS,SAETA,aAAe,6BAAYF,QAASD,OAAQE,SAC9C,MAAOE,wBACC,2BAAiBA,WAChB,QAES,MAAhBD,OAAOE,KAAc,OACfC,iBAAmB,kBAAU,gBAAiB,UAAWH,OAAOE,MAChEE,aAAeC,KAAKC,MAAMN,OAAOA,eACnCI,aAAaG,wBACTC,MAAMJ,aAAaG,iBAErBE,WAAWL,aAAaM,QAASP,YAChC,YAEJH,OAAOA,cAGLS,WAAatC,eAAMuC,aAASC,6DAAQ,KAC/B,OAAVA,QACAA,MAAQhC,gBAAgBiC,gBAAgB,uBAEtCC,iBAAmB,uBAAYF,MAAOD,SAC5CG,WAAWC,UAAUC,GAAGC,sBAAYC,QAAQ,KACxCC,SAASC,iBAAiB,uBAAuBC,SAAQC,6BACnDA,QAAQC,QAAQ,qEAKAC,qBAEpBC,KAAON,SAASO,cAAc,eACpCD,KAAKE,UAAYH,aACVC,KAAKG,qCAGevD,QACpBF,YAAYE,QAAQG,iCAGHH,QACjBF,YAAYE,QAAQuB,iCAGAvB,QACpBF,YAAYE,QAAQK,sCAGEL,QACtBF,YAAYE,QAAQS,0CAGIT,QACxBF,YAAYE,QAAQW,yCAGCX,QACrBF,YAAYE,QAAQa,0CAGKb,QACzBF,YAAYE,QAAQe,8CAGKf,QACzBF,YAAYE,QAAQiB,wCAGDjB,QACnBF,YAAYE,QAAQmB,kCAGDnB,QACnBF,YAAYE,QAAQqB,0CAGOmC,SAC3BA,QAAQC,QAAQ,+BAA+BC,QAAQC"}