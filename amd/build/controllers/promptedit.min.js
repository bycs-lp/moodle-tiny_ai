define("tiny_ai/controllers/promptedit",["exports","core/prefetch","core/log","tiny_ai/renderer","core/str"],(function(_exports,_prefetch,_log,Renderer,_str){var obj;
/**
   * Controller for handling the show/hide prompt button and the associated textarea.
   *
   * @module      tiny_ai/controllers/promtedit_controller
   * @copyright   2024, ISB Bayern
   * @author      Philipp Memmel
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_log=(obj=_log)&&obj.__esModule?obj:{default:obj},Renderer=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Renderer);return _exports.default=class{constructor(baseSelector){this.baseElement=document.querySelector(baseSelector)}async init(){const showPromptButton=this.baseElement.querySelector('[data-action="showprompt"]'),textarea=this.baseElement.querySelector('textarea[data-type="prompt"]');if(console.log(showPromptButton),showPromptButton){const[showPromptString,hidePromptString]=await(0,_str.getStrings)([{key:"showprompt",component:"tiny_ai"},{key:"hideprompt",component:"tiny_ai"}]);showPromptButton.addEventListener("click",(event=>{const currentText=showPromptButton.querySelector("[data-text]").innerText;showPromptButton.querySelector("[data-text]").innerText=currentText===showPromptString?hidePromptString:showPromptString;const buttonIcon=showPromptButton.querySelector("i");buttonIcon.classList.contains("fa-eye")?(buttonIcon.classList.remove("fa-eye"),buttonIcon.classList.add("fa-eye-slash")):(buttonIcon.classList.remove("fa-eye-slash"),buttonIcon.classList.add("fa-eye")),textarea.classList.toggle("d-none")}))}}},_exports.default}));

//# sourceMappingURL=promptedit.min.js.map