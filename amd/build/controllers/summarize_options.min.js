define("tiny_ai/controllers/summarize_options",["exports","core/prefetch","tiny_ai/constants","tiny_ai/renderer","tiny_ai/selectors"],(function(_exports,_prefetch,_constants,Renderer,_selectors){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,Renderer=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * Controller for the main selection.
   *
   * @module      tiny_ai/controllers/summarize_options
   * @copyright   2024, ISB Bayern
   * @author      Philipp Memmel
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Renderer),_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};return _exports.default=class{constructor(baseSelector){this.baseElement=document.querySelector(baseSelector)}async init(){const modalFooter=document.querySelector(_selectors.default.modalFooter),backButton=modalFooter.querySelector('[data-action="back"]'),generateButton=modalFooter.querySelector('[data-action="generate"]');backButton&&backButton.addEventListener("click",(async()=>{await Renderer.renderStart(_constants.constants.modalModes.selection)})),generateButton&&generateButton.addEventListener("click",(async()=>{await Renderer.renderLoading(),await new Promise((resolve=>setTimeout(resolve,1e3))),await Renderer.renderSuggestion("BLINDTEXT")}))}},_exports.default}));

//# sourceMappingURL=summarize_options.min.js.map