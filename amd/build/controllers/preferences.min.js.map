{"version":3,"file":"preferences.min.js","sources":["../../src/controllers/preferences.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controller for the main selection.\n *\n * @module      tiny_ai/controllers/translate\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {constants} from 'tiny_ai/constants';\nimport SELECTORS from 'tiny_ai/selectors';\nimport BaseController from 'tiny_ai/controllers/base';\nimport SummarizeHandler from 'tiny_ai/datahandler/summarize';\nimport TranslateHandler from 'tiny_ai/datahandler/translate';\nimport TtsHandler from 'tiny_ai/datahandler/tts';\nimport ImggenHandler from 'tiny_ai/datahandler/imggen';\n\nexport default class extends BaseController {\n\n\n    async init() {\n        const modalFooter = document.querySelector(SELECTORS.modalFooter);\n        const backButton = modalFooter.querySelector('[data-action=\"back\"]');\n        const generateButton = modalFooter.querySelector('[data-action=\"generate\"]');\n\n        switch (this.datamanager.getCurrentTool()) {\n            case 'summarize':\n            case 'describe': {\n                SummarizeHandler.setTool(this.datamanager.getCurrentTool());\n                const maxWordCountElement = this.baseElement.querySelector('[data-preference=\"maxWordCount\"]');\n                const languageTypeElement = this.baseElement.querySelector('[data-preference=\"languageType\"]');\n                SummarizeHandler.setMaxWordCount(maxWordCountElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                SummarizeHandler.setLanguageType(languageTypeElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                const currentPromptSummarize = await SummarizeHandler.getPrompt(this.datamanager.getSelectionText());\n                this.datamanager.setCurrentPrompt(currentPromptSummarize);\n                maxWordCountElement.addEventListener('dropdownSelectionUpdated', async (event) => {\n                    SummarizeHandler.setMaxWordCount(event.detail.newValue);\n                    const currentPrompt = await SummarizeHandler.getPrompt(this.datamanager.getSelectionText());\n                    this.datamanager.setCurrentPrompt(currentPrompt);\n                });\n                languageTypeElement.addEventListener('dropdownSelectionUpdated', async (event) => {\n                    SummarizeHandler.setLanguageType(event.detail.newValue);\n                    const currentPrompt = await SummarizeHandler.getPrompt(this.datamanager.getSelectionText());\n                    this.datamanager.setCurrentPrompt(currentPrompt);\n                });\n                break;\n            }\n            case 'translate': {\n                const targetLanguageElement = this.baseElement.querySelector('[data-preference=\"targetLanguage\"]');\n                TranslateHandler.setTargetLanguage(targetLanguageElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                const currentPromptTranslate = await TranslateHandler.getPrompt(this.datamanager.getSelectionText());\n                this.datamanager.setCurrentPrompt(currentPromptTranslate);\n                targetLanguageElement.addEventListener('dropdownSelectionUpdated', async (event) => {\n                    TranslateHandler.setTargetLanguage(event.detail.newValue);\n                    const currentPromptTranslate = await TranslateHandler.getPrompt(this.datamanager.getSelectionText());\n                    this.datamanager.setCurrentPrompt(currentPromptTranslate);\n                });\n                break;\n            }\n            case 'tts':\n            case 'audiogen': {\n                const ttsTargetLanguageElement = this.baseElement.querySelector('[data-preference=\"targetLanguage\"]');\n                const voiceElement = this.baseElement.querySelector('[data-preference=\"voice\"]');\n                const genderElement = this.baseElement.querySelector('[data-preference=\"gender\"]');\n                if (ttsTargetLanguageElement) {\n                    TtsHandler.setTargetLanguage(ttsTargetLanguageElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                    ttsTargetLanguageElement.addEventListener('dropdownSelectionUpdated', event => {\n                        TtsHandler.setTargetLanguage(event.detail.newValue);\n                        this.datamanager.setCurrentOptions(TtsHandler.getOptions());\n                    });\n                }\n                if (voiceElement) {\n                    TtsHandler.setVoice(voiceElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                    voiceElement.addEventListener('dropdownSelectionUpdated', event => {\n                        TtsHandler.setVoice(event.detail.newValue);\n                        this.datamanager.setCurrentOptions(TtsHandler.getOptions());\n                    });\n                }\n                if (genderElement) {\n                    TtsHandler.setGender(genderElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                    genderElement.addEventListener('dropdownSelectionUpdated', event => {\n                        TtsHandler.setGender(event.detail.newValue);\n                        this.datamanager.setCurrentOptions(TtsHandler.getOptions());\n                    });\n                }\n                this.datamanager.setCurrentPrompt(TtsHandler.getPrompt(this.datamanager.getCurrentTool(),\n                    this.datamanager.getSelectionText()));\n                this.datamanager.setCurrentOptions(TtsHandler.getOptions());\n                break;\n            }\n            case 'imggen': {\n                const sizesElement = this.baseElement.querySelector('[data-preference=\"sizes\"]');\n\n                if (sizesElement) {\n                    ImggenHandler.setSize(sizesElement.querySelector('[data-dropdown=\"select\"]').dataset.value);\n                    sizesElement.addEventListener('dropdownSelectionUpdated', event => {\n                        ImggenHandler.setSize(event.detail.newValue);\n                        this.datamanager.setCurrentOptions(ImggenHandler.getOptions());\n                    });\n                }\n                this.datamanager.setCurrentPrompt('');\n                this.datamanager.setCurrentOptions(ImggenHandler.getOptions());\n                break;\n            }\n        }\n\n        if (backButton) {\n            backButton.addEventListener('click', async () => {\n                await this.renderer.renderStart(constants.modalModes.selection);\n            });\n        }\n\n        if (generateButton) {\n            generateButton.addEventListener('click', async () => {\n                const result = await this.generateAiAnswer();\n                if (result === null) {\n                    return;\n                }\n                await this.renderer.renderSuggestion();\n            });\n        }\n    }\n}\n"],"names":["BaseController","modalFooter","document","querySelector","SELECTORS","backButton","generateButton","this","datamanager","getCurrentTool","setTool","maxWordCountElement","baseElement","languageTypeElement","setMaxWordCount","dataset","value","setLanguageType","currentPromptSummarize","SummarizeHandler","getPrompt","getSelectionText","setCurrentPrompt","addEventListener","async","event","detail","newValue","currentPrompt","targetLanguageElement","setTargetLanguage","currentPromptTranslate","TranslateHandler","ttsTargetLanguageElement","voiceElement","genderElement","setCurrentOptions","TtsHandler","getOptions","setVoice","setGender","sizesElement","setSize","ImggenHandler","renderer","renderStart","constants","modalModes","selection","generateAiAnswer","renderSuggestion"],"mappings":";;;;;;;;oWAgC6BA,iCAIfC,YAAcC,SAASC,cAAcC,mBAAUH,aAC/CI,WAAaJ,YAAYE,cAAc,wBACvCG,eAAiBL,YAAYE,cAAc,mCAEzCI,KAAKC,YAAYC,sBAChB,gBACA,+BACgBC,QAAQH,KAAKC,YAAYC,wBACpCE,oBAAsBJ,KAAKK,YAAYT,cAAc,oCACrDU,oBAAsBN,KAAKK,YAAYT,cAAc,uDAC1CW,gBAAgBH,oBAAoBR,cAAc,4BAA4BY,QAAQC,0BACtFC,gBAAgBJ,oBAAoBV,cAAc,4BAA4BY,QAAQC,aACjGE,6BAA+BC,mBAAiBC,UAAUb,KAAKC,YAAYa,yBAC5Eb,YAAYc,iBAAiBJ,wBAClCP,oBAAoBY,iBAAiB,4BAA4BC,MAAAA,2BAC5CV,gBAAgBW,MAAMC,OAAOC,gBACxCC,oBAAsBT,mBAAiBC,UAAUb,KAAKC,YAAYa,yBACnEb,YAAYc,iBAAiBM,kBAEtCf,oBAAoBU,iBAAiB,4BAA4BC,MAAAA,2BAC5CP,gBAAgBQ,MAAMC,OAAOC,gBACxCC,oBAAsBT,mBAAiBC,UAAUb,KAAKC,YAAYa,yBACnEb,YAAYc,iBAAiBM,4BAIrC,mBACKC,sBAAwBtB,KAAKK,YAAYT,cAAc,yDAC5C2B,kBAAkBD,sBAAsB1B,cAAc,4BAA4BY,QAAQC,aACrGe,6BAA+BC,mBAAiBZ,UAAUb,KAAKC,YAAYa,yBAC5Eb,YAAYc,iBAAiBS,wBAClCF,sBAAsBN,iBAAiB,4BAA4BC,MAAAA,2BAC9CM,kBAAkBL,MAAMC,OAAOC,gBAC1CI,6BAA+BC,mBAAiBZ,UAAUb,KAAKC,YAAYa,yBAC5Eb,YAAYc,iBAAiBS,qCAIrC,UACA,kBACKE,yBAA2B1B,KAAKK,YAAYT,cAAc,sCAC1D+B,aAAe3B,KAAKK,YAAYT,cAAc,6BAC9CgC,cAAgB5B,KAAKK,YAAYT,cAAc,8BACjD8B,wCACWH,kBAAkBG,yBAAyB9B,cAAc,4BAA4BY,QAAQC,OACxGiB,yBAAyBV,iBAAiB,4BAA4BE,qBACvDK,kBAAkBL,MAAMC,OAAOC,eACrCnB,YAAY4B,kBAAkBC,aAAWC,kBAGlDJ,4BACWK,SAASL,aAAa/B,cAAc,4BAA4BY,QAAQC,OACnFkB,aAAaX,iBAAiB,4BAA4BE,qBAC3Cc,SAASd,MAAMC,OAAOC,eAC5BnB,YAAY4B,kBAAkBC,aAAWC,kBAGlDH,6BACWK,UAAUL,cAAchC,cAAc,4BAA4BY,QAAQC,OACrFmB,cAAcZ,iBAAiB,4BAA4BE,qBAC5Ce,UAAUf,MAAMC,OAAOC,eAC7BnB,YAAY4B,kBAAkBC,aAAWC,uBAGjD9B,YAAYc,iBAAiBe,aAAWjB,UAAUb,KAAKC,YAAYC,iBACpEF,KAAKC,YAAYa,0BAChBb,YAAY4B,kBAAkBC,aAAWC,wBAG7C,gBACKG,aAAelC,KAAKK,YAAYT,cAAc,6BAEhDsC,+BACcC,QAAQD,aAAatC,cAAc,4BAA4BY,QAAQC,OACrFyB,aAAalB,iBAAiB,4BAA4BE,wBACxCiB,QAAQjB,MAAMC,OAAOC,eAC9BnB,YAAY4B,kBAAkBO,gBAAcL,uBAGpD9B,YAAYc,iBAAiB,SAC7Bd,YAAY4B,kBAAkBO,gBAAcL,qBAKrDjC,YACAA,WAAWkB,iBAAiB,SAASC,gBAC3BjB,KAAKqC,SAASC,YAAYC,qBAAUC,WAAWC,cAIzD1C,gBACAA,eAAeiB,iBAAiB,SAASC,UAEtB,aADMjB,KAAK0C,0BAIpB1C,KAAKqC,SAASM"}