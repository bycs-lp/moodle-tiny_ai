{"version":3,"file":"suggestion.min.js","sources":["../../src/controllers/suggestion.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controller for the main selection.\n *\n * @module      tiny_ai/controllers/suggestion\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {prefetchStrings} from 'core/prefetch';\nimport * as Renderer from 'tiny_ai/renderer';\nimport BaseController from 'tiny_ai/controllers/base';\nimport {insertAfterContent, replaceSelection, destroyModal} from 'tiny_ai/utils';\nimport {renderWarningBox} from 'local_ai_manager/warningbox';\n\nexport default class extends BaseController {\n\n    async init() {\n        const trashButton = this.footer.querySelector('[data-action=\"delete\"]');\n        const regenerateButton = this.footer.querySelector('[data-action=\"regenerate\"]');\n        const insertBelowButton = this.footer.querySelector('[data-action=\"insertbelow\"]');\n        const replaceButton = this.footer.querySelector('[data-action=\"replace\"]');\n        const insertAtCaretButton = this.footer.querySelector('[data-action=\"insertatcaret\"]');\n\n        if (trashButton) {\n            trashButton.addEventListener('click', async() => {\n                await Renderer.renderDismiss();\n            });\n        }\n\n        if (regenerateButton) {\n            regenerateButton.addEventListener('click', async() => {\n                await Renderer.renderOptimizePrompt();\n            });\n        }\n\n        if (insertBelowButton) {\n            insertBelowButton.addEventListener('click', () => {\n                insertAfterContent(Renderer.renderAiResultForEditor());\n                destroyModal();\n            });\n        }\n\n        if (replaceButton) {\n            replaceButton.addEventListener('click', () => {\n                replaceSelection(Renderer.renderAiResultForEditor());\n                destroyModal();\n            });\n        }\n\n        if (insertAtCaretButton) {\n            insertAtCaretButton.addEventListener('click', () => {\n                replaceSelection(Renderer.renderAiResultForEditor());\n                destroyModal();\n            });\n        }\n\n        const warningBoxSelector = '[data-rendertarget=\"warningbox\"]';\n        if (document.querySelector(warningBoxSelector)) {\n            await renderWarningBox(warningBoxSelector);\n        }\n    }\n}\n"],"names":["BaseController","trashButton","this","footer","querySelector","regenerateButton","insertBelowButton","replaceButton","insertAtCaretButton","addEventListener","async","Renderer","renderDismiss","renderOptimizePrompt","renderAiResultForEditor","document"],"mappings":";;;;;;;;2FA8B6BA,iCAGfC,YAAcC,KAAKC,OAAOC,cAAc,0BACxCC,iBAAmBH,KAAKC,OAAOC,cAAc,8BAC7CE,kBAAoBJ,KAAKC,OAAOC,cAAc,+BAC9CG,cAAgBL,KAAKC,OAAOC,cAAc,2BAC1CI,oBAAsBN,KAAKC,OAAOC,cAAc,iCAElDH,aACAA,YAAYQ,iBAAiB,SAASC,gBAC5BC,SAASC,mBAInBP,kBACAA,iBAAiBI,iBAAiB,SAASC,gBACjCC,SAASE,0BAInBP,mBACAA,kBAAkBG,iBAAiB,SAAS,mCACrBE,SAASG,wDAKhCP,eACAA,cAAcE,iBAAiB,SAAS,iCACnBE,SAASG,wDAK9BN,qBACAA,oBAAoBC,iBAAiB,SAAS,iCACzBE,SAASG,wDAM9BC,SAASX,cADc,2CAEjB,gCAFiB"}