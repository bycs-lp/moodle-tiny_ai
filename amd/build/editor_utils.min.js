define("tiny_ai/editor_utils",["exports","tiny_ai/modal","core/modal_events","tiny_ai/options","tiny_ai/constants","tiny_ai/common","editor_tiny/options","tiny_ai/utils"],(function(_exports,_modal,_modal_events,_options,_constants,_common,_options2,_utils){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events);return _exports.default=class{constructor(uniqid,editor){_defineProperty(this,"uniqid",null),_defineProperty(this,"userId",null),_defineProperty(this,"modal",null),_defineProperty(this,"mode",null),_defineProperty(this,"editor",null),this.uniqid=uniqid,this.editor=editor,this.userId=(0,_options.getUserId)(editor)}async displayDialogue(source){source===_common.selectionbarSource||this.editor.selection.getContent().length>0?this.mode=_constants.constants.modalModes.selection:source!==_common.toolbarSource&&source!==_common.menubarSource||(this.mode=_constants.constants.modalModes.general),this.modal=await _modal.default.create({templateContext:{classes:"tiny_ai-modal--dialog",headerclasses:"tiny_ai-modal--header"}}),this.modal.show();const renderer=(0,_utils.getRenderer)(this.uniqid);if((0,_utils.getDatamanager)(this.uniqid).setSelectionImg(null),this.mode===_constants.constants.modalModes.selection){const selectedEditorContentHtml=this.editor.selection.getContent({format:"html"}),images=(new DOMParser).parseFromString(selectedEditorContentHtml,"text/html").querySelectorAll("img");if(images.length>0&&images[0].src){const image=images[0],fetchResult=await fetch(image.src),data=await fetchResult.blob();(0,_utils.getDatamanager)(this.uniqid).setSelectionImg(data)}(0,_utils.getDatamanager)(this.uniqid).setSelection(this.editor.selection.getContent())}await renderer.renderStart(),this.modal.getRoot().on(_modal_events.default.outsideClick,(event=>{event.preventDefault()}))}insertAfterContent(textToInsert){this.editor.setContent(this.editor.getContent()+"<p>"+textToInsert+"</p>")}replaceSelection(textReplacement){this.editor.selection.setContent(textReplacement)}getDraftItemId(){return(0,_options2.getDraftItemId)(this.editor)}getContextId(){return(0,_options2.getContextId)(this.editor)}getMode(){return this.mode}getModal(){return this.modal}getUserId(){return this.userId}},_exports.default}));

//# sourceMappingURL=editor_utils.min.js.map