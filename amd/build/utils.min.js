define("tiny_ai/utils",["exports","./modal","./selectors","local_ai_manager/make_request","core/modal_events"],(function(_exports,_modal,_selectors,_make_request,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny AI utils library.
   *
   * @package     tiny_ai
   * @copyright   2024, ISB Bayern
   * @author      Dr. Peter Mayer
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.setLink=_exports.displayDialogue=void 0,_modal=_interopRequireDefault(_modal),_selectors=_interopRequireDefault(_selectors),_modal_events=_interopRequireDefault(_modal_events);const getTemplateContext=(editor,data)=>Object.assign({},{"defaultprompt-simplify":"Simplify the following text:",btnIdStartSimplification:_selectors.default.buttons.btnStartSimplification,taResult:_selectors.default.elements.taResult,spanResult:_selectors.default.elements.spanResult},data);_exports.displayDialogue=async function(editor){let data=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const modal=await _modal.default.create({templateContext:getTemplateContext(0,data)}),$root=modal.getRoot(),root=$root[0];$root.on(_modal_events.default.save,(()=>{let selectedText=editor.selection.getContent(),newText=document.getElementById(_selectors.default.elements.taResult).value;selectedText?editor.selection.setContent(newText):editor.insertContent(result)})),root.addEventListener("click",(e=>{const simplifyButton=e.target.closest("#tiny_ai-simplify");hideAllSettingsSections(),simplifyButton&&showSettingSection(_selectors.default.elements.settingsIdSimplify);e.target.closest("#tiny_ai-translate")&&window.console.log("Button Translate Clicked.");e.target.closest("#tiny_ai-text-to-speech")&&window.console.log("Button T2S Clicked.")})),document.getElementById(_selectors.default.buttons.btnStartSimplification).addEventListener("click",(()=>{let selectedText=editor.selection.getContent(),cmdPrompt=document.getElementById(_selectors.default.elements.cmdPromptSimplify).value;getChatResult(cmdPrompt,selectedText)}))};const getChatResult=(cmdPrompt,selectedText)=>{let prompt=cmdPrompt+" "+selectedText;document.getElementById(_selectors.default.elements.spanResult).classList.remove("hidden"),retrieveResult("chat",prompt).then((result=>{document.getElementById(_selectors.default.elements.taResult).value=result}))},hideAllSettingsSections=()=>{[document.getElementsByClassName(_selectors.default.elements.classPurposeSettings)].forEach((x=>x.className+=" hidden"))},showSettingSection=selectorID=>{document.getElementById(selectorID).classList.remove("hidden")},retrieveResult=async(purpose,prompt)=>(result=await(0,_make_request.makeRequest)(purpose,prompt),result);_exports.setLink=(currentForm,editor)=>{let value=currentForm.querySelector(_selectors.default.elements.urlEntry).value;if(""!==value){const pendingPromise=new Pending("tiny_link/setLink");value=value.trim();new RegExp(/^[a-zA-Z]*\.*\/|^#|^[a-zA-Z]*:/).test(value)||(value="http://"+value),setLinkOnSelection(currentForm,editor,value).then(pendingPromise.resolve)}}}));

//# sourceMappingURL=utils.min.js.map