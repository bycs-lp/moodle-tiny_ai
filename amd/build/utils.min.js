define("tiny_ai/utils",["exports","./modal","./selectors","local_ai_manager/make_request","core/modal_events","core/config","editor_tiny/options"],(function(_exports,_modal,_selectors,_make_request,_modal_events,_config,_options){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny AI utils library.
   *
   * @module      tiny_ai/utils
   * @copyright   2024, ISB Bayern
   * @author      Dr. Peter Mayer
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.displayDialogue=void 0,_modal=_interopRequireDefault(_modal),_selectors=_interopRequireDefault(_selectors),_modal_events=_interopRequireDefault(_modal_events),_config=_interopRequireDefault(_config);const getTemplateContext=data=>Object.assign({},{"defaultprompt-simplify":"Simplify the following text:",btnIdStartSimplification:_selectors.default.buttons.btnStartSimplification,"defaultprompt-translate":"Translate the following text to american english:",btnIdStartTranslation:_selectors.default.buttons.btnStartTranslation,"defaultprompt-tts":"",btnIdStartTTS:_selectors.default.buttons.btnStartTTS,taResult:_selectors.default.elements.taResult,spanResult:_selectors.default.elements.spanResult},data);_exports.displayDialogue=async function(editor){let data=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const modal=await _modal.default.create({templateContext:getTemplateContext(data)}),$root=modal.getRoot(),root=$root[0];$root.on(_modal_events.default.save,(()=>{let selectedText=editor.selection.getContent(),newText=document.getElementById(_selectors.default.elements.taResult).value;selectedText?editor.selection.setContent(newText):editor.insertContent(newText)})),root.addEventListener("click",(e=>{hideAllSettingsSections();e.target.closest("#tiny_ai-simplify")&&(hideAllSettingsSections(),showSettingSection(_selectors.default.elements.settingsIdSimplify));e.target.closest("#tiny_ai-translate")&&(hideAllSettingsSections(),showSettingSection(_selectors.default.elements.settingsIdTranslate));e.target.closest("#tiny_ai-text-to-speech")&&(hideAllSettingsSections(),showSettingSection(_selectors.default.elements.settingsIdTTS))})),document.getElementById(_selectors.default.buttons.btnStartSimplification).addEventListener("click",(()=>{let selectedText=editor.selection.getContent(),cmdPrompt=document.getElementById(_selectors.default.elements.cmdPromptSimplify).value;getChatResult(cmdPrompt,selectedText)})),document.getElementById(_selectors.default.buttons.btnStartTranslation).addEventListener("click",(()=>{let selectedText=editor.selection.getContent(),cmdPrompt=document.getElementById(_selectors.default.elements.cmdPromptTranslate).value;getChatResult(cmdPrompt,selectedText)})),document.getElementById(_selectors.default.buttons.btnStartTTS).addEventListener("click",(()=>{let selectedText=editor.selection.getContent(),cmdPrompt=document.getElementById(_selectors.default.elements.cmdPromptTTS).value;const options={};options.itemid=(0,_options.getDraftItemId)(editor),options.filename="tts_"+Math.random().toString(16).slice(2)+".mp3",getMP3(cmdPrompt,selectedText,options)}))};const getChatResult=(cmdPrompt,selectedText)=>{let prompt=cmdPrompt+" "+selectedText;document.getElementById(_selectors.default.elements.spanResult).classList.remove("hidden"),retrieveResult("chat",prompt).then((result=>{document.getElementById(_selectors.default.elements.taResult).value=result}))},getMP3=(cmdPrompt,selectedText,options)=>{let prompt=cmdPrompt+" "+selectedText;document.getElementById(_selectors.default.elements.spanResult).classList.remove("hidden"),retrieveResult("tts",prompt,options).then((result=>{const fileUrl=result,uniqid="id"+Math.random().toString(16).slice(2);let node=selectedText+'<audio class="tiny_ai_audio" controls id="'+uniqid+'" src="'+fileUrl+'" type="audio/mpeg" ></span>';var audiotag=document.createElement("audio");audiotag.controls="controls",audiotag.src=fileUrl,audiotag.type="audio/mpeg",document.getElementById(_selectors.default.elements.spanResult).appendChild(audiotag),document.getElementById(_selectors.default.elements.taResult).value=node}))},hideAllSettingsSections=()=>{[document.getElementsByClassName(_selectors.default.elements.classPurposeSettings)].forEach((x=>{x.className+=" hidden"}))},showSettingSection=selectorID=>{document.getElementById(selectorID).classList.remove("hidden")},retrieveResult=async function(purpose,prompt){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],result=await(0,_make_request.makeRequest)(purpose,prompt,JSON.stringify(options));return result}}));

//# sourceMappingURL=utils.min.js.map