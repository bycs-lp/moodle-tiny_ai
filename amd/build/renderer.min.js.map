{"version":3,"file":"renderer.min.js","sources":["../src/renderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny AI utils library.\n *\n * @module      tiny_ai/renderer\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport AiModal from './modal';\nimport {SELECTORS} from 'tiny_ai/selectors';\nimport {makeRequest} from 'local_ai_manager/make_request';\nimport {getPurposeConfig} from 'local_ai_manager/config';\nimport ModalEvents from 'core/modal_events';\nimport {getDraftItemId} from 'editor_tiny/options';\nimport {getStrings} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\nimport {alert, exception as displayException} from 'core/notification';\nimport {renderInfoBox} from 'local_ai_manager/render_infobox';\nimport {getContextId} from 'editor_tiny/options';\nimport {getUserId} from 'tiny_ai/options';\nimport {renderUserQuota} from 'local_ai_manager/userquota';\nimport {call as fetchMany} from 'core/ajax';\nimport {selectionbarSource, toolbarSource, menubarSource} from 'tiny_ai/common';\nimport Log from 'core/log';\nimport Templates from 'core/templates';\nimport * as DataManager from 'tiny_ai/datamanager';\nimport {constants} from 'tiny_ai/constants';\nimport {getAiConfig} from 'local_ai_manager/config';\nimport {renderModalContent} from \"./utils\";\n\n\nconst stringKeys = [\n    'back',\n    'generate',\n    'hideprompt',\n    'mainselection_heading',\n    'showprompt',\n    'toolname_audiogen',\n    'toolname_describe',\n    'toolname_describe_extension',\n    'toolname_imggen',\n    'toolname_summarize',\n    'toolname_summarize_extension',\n    'toolname_translate',\n    'toolname_translate_extension',\n    'toolname_tts',\n    'toolname_tts_extension',\n];\nlet aiConfig = null;\n\nprefetchStrings('tiny_ai', stringKeys);\nlet strings = {};\n\nexport const init = async () => {\n    aiConfig = await getAiConfig();\n    const stringRequest = stringKeys.map(key => {\n        return {key, component: 'tiny_ai'}\n    });\n    [\n        strings.back,\n        strings.generate,\n        strings.hideprompt,\n        strings.mainselection_heading,\n        strings.showprompt,\n        strings.toolname_audiogen,\n        strings.toolname_describe,\n        strings.toolname_describe_extension,\n        strings.toolname_imggen,\n        strings.toolname_summarize,\n        strings.toolname_summarize_extension,\n        strings.toolname_translate,\n        strings.toolname_translate_extension,\n        strings.toolname_tts,\n        strings.toolname_tts_extension,\n    ] = await getStrings(stringRequest);\n};\n\nconst getBackAndGenerateButtonContext = () => {\n    return {\n        footer_buttons: [\n            {\n                hasText: true,\n                button_text: strings.back,\n                icon_left: true,\n                icon_right: false,\n                primary: false,\n                secondary: false,\n                tertiary: true,\n                iconname: 'arrow-left',\n                iconstyle: 'solid',\n                action: 'back'\n            },\n            {\n                hasText: true,\n                button_text: strings.generate,\n                icon_left: true,\n                icon_right: false,\n                primary: true,\n                secondary: false,\n                tertiary: false,\n                iconname: 'sparkle',\n                customicon: true,\n                action: 'generate'\n            }\n        ]\n    };\n}\n\nconst getReplaceButtonsContext = () => {\n    return {\n        footer_iconbuttons:\n            [\n                {\n                    \"iconName\": \"trash\"\n                },\n                {\n                    \"iconName\": \"arrows-rotate\"\n                }\n            ],\n        footer_buttons:\n            [\n                {\n                    hasText: true,\n                    button_text: \"UNTEN EINFUEGEN\",\n                    icon_left: true,\n                    icon_right: false,\n                    secondary: true,\n                    iconname: 'text-insert-last',\n                    customicon: true\n                },\n                {\n                    hasText: true,\n                    button_text: \"AUSWAHL ERSETZEN\",\n                    icon_left: true,\n                    icon_right: false,\n                    primary: true,\n                    iconname: 'check',\n                    iconstyle: 'solid'\n                }\n            ],\n    };\n};\n\nconst getInputContext = () => {\n    return {\n        input: [\n            {\n                iconname: 'sparkle',\n                customicon: true,\n                button: [\n                    {\n                        customicon: false,\n                        iconname: 'arrow-right',\n                        iconstyle: 'solid',\n                        icon_left: false,\n                        icon_right: true\n                    }\n                ]\n            }\n        ],\n    }\n}\n\nconst getShowPromptButtonContext = () => {\n    return {\n        hasText: true,\n        button_text: strings.showprompt,\n        icon_left: true,\n        icon_right: false,\n        tertiary: true,\n        iconname: 'eye',\n        iconstyle: 'solid',\n        action: 'showprompt',\n        textareatype: 'prompt',\n        collapsed: true\n    }\n};\n\nexport const getTemplateContextStart = async (mode) => {\n\n    const getPurposeConfig = (tool) => {\n        const toolPurpose = constants.toolPurposeMapping[tool];\n        return aiConfig.purposes.filter(purpose => purpose['purpose'] === toolPurpose)[0];\n    }\n\n    // TODO Test if this logic is correct\n    const isToolDisabled = (tool) => {\n        if (!aiConfig.tenantenabled && aiConfig.role !== 'role_basic') {\n            console.log(\"bla1\")\n            return true;\n        }\n        if (aiConfig.userlocked) {\n            console.log(\"bla2\")\n            return true;\n        }\n        const purposeInfo = getPurposeConfig(tool);\n        if (!purposeInfo.isconfigured && aiConfig.role !== 'role_basic') {\n            console.log(\"bla3\")\n            return true;\n        }\n        if (purposeInfo.limitreached) {\n            console.log(\"bla1\")\n            return true;\n        }\n        console.log(\"bla4\")\n        return false;\n    }\n\n    // TODO Test if this logic is correct\n    const isToolHidden = (tool) => {\n        if (aiConfig.role !== 'role_basic') {\n            return false;\n        }\n        if (!aiConfig.tenantenabled) {\n            return true;\n        }\n        const purposeInfo = getPurposeConfig(tool);\n        if (!purposeInfo.isconfigured) {\n            return true;\n        }\n        if (purposeInfo.limitreached) {\n            return true;\n        }\n        return false;\n    }\n\n    let toolButtons = [];\n    switch (mode) {\n        case 'selection':\n            toolButtons.push({\n                tool: strings.toolname_summarize,\n                description: strings.toolname_summarize_extension,\n                customicon: true,\n                iconname: 'shorten',\n                disabled: isToolDisabled('summarize'),\n                action: 'loadsummarize'\n            });\n            toolButtons.push({\n                tool: strings.toolname_translate,\n                description: strings.toolname_translate_extension,\n                iconname: 'language',\n                iconstyle: 'solid',\n                disabled: isToolDisabled('translate'),\n                action: 'loadtranslate'\n            });\n            toolButtons.push({\n                tool: strings.toolname_describe,\n                description: strings.toolname_describe_extension,\n                customicon: true,\n                iconname: 'extend',\n                disabled: isToolDisabled('describe'),\n                action: 'loaddescribe'\n            });\n            toolButtons.push({\n                tool: strings.toolname_tts,\n                description: strings.toolname_tts_extension,\n                iconstyle: 'solid',\n                iconname: 'microphone',\n                disabled: isToolDisabled('tts'),\n                action: 'loadtts'\n            });\n            break;\n        case 'general':\n            toolButtons.push({\n                tool: strings.toolname_audiogen,\n                iconstyle: 'solid',\n                iconname: 'microphone',\n                disabled: isToolDisabled('tts'),\n                action: 'loadtts'\n            });\n            toolButtons.push({\n                tool: strings.toolname_imggen,\n                iconstyle: 'solid',\n                iconname: 'image',\n                disabled: isToolDisabled('imggen'),\n                action: 'loadimggen'\n            });\n    }\n    toolButtons = toolButtons.filter(buttonContext => !isToolHidden(buttonContext.tool));\n\n    const templateContext = {\n        showIcon: true,\n        modal_headline: strings.mainselection_heading,\n        modal_buttons: toolButtons,\n    };\n    Object.assign(templateContext, getInputContext());\n    return templateContext;\n}\n\n\nexport const getTemplateContextSummarize = async (extendPrompt) => {\n    const context = {\n        modal_headline: \"Zusammenfassen des markierten Textes\",\n        showIcon: true,\n        modal_dropdowns: [\n            {\n                dropdown_description: \"Max. Anzahl der Wörter\",\n                dropdown_default: \"Keine Auswahl\",\n                dropdown_options: [\n                    {\n                        optionLabel: \"Test 1\",\n                        optionValue: \"1\"\n                    },\n                    {\n                        optionLabel: \"Test 2\",\n                        optionValue: \"2\"\n                    },\n                    {\n                        optionLabel: \"Test 3\",\n                        optionValue: \"3\"\n                    },\n                    {\n                        optionLabel: \"Test 4\",\n                        optionValue: \"4\"\n                    }\n                ]\n            },\n            {\n                dropdown_description: \"Art der Sprache\",\n                dropdown_default: \"Fachsprache\",\n                dropdown_options: [\n                    {\n                        \"optionLabel\": \"Test 1\",\n                        \"optionValue\": \"1\"\n                    },\n                    {\n                        \"optionLabel\": \"Test 2\",\n                        \"optionValue\": \"2\"\n                    },\n                    {\n                        \"optionLabel\": \"Test 3\",\n                        \"optionValue\": \"3\"\n                    },\n                    {\n                        \"optionLabel\": \"Test 4\",\n                        \"optionValue\": \"4\"\n                    }\n                ]\n            }\n        ],\n\n\n    };\n    Object.assign(context, getShowPromptButtonContext(extendPrompt));\n    Object.assign(context, getBackAndGenerateButtonContext());\n    context.controller = 'summarize_options';\n    return context;\n}\n\nexport const getTemplateContextTranslate = async () => {\n    return {};\n}\n\nexport const getTemplateContextDescribe = async () => {\n    return {};\n}\n\nexport const getTemplateContextTts = async () => {\n    return {};\n}\n\nexport const getTemplateContextAudiogen = async () => {\n    return {};\n}\n\nexport const getTemplateContextImggen = async () => {\n    const context = {\n        modal_headline: \"BILDGENERIERUNG\",\n        showIcon: true,\n        modal_dropdowns: [\n            {\n                dropdown_description: \"AUFLOESUNG\",\n                dropdown_default: \"Keine Auswahl\",\n                dropdown_options: [\n                    {\n                        optionLabel: \"Test 1\",\n                        optionValue: \"1\"\n                    },\n                    {\n                        optionLabel: \"Test 2\",\n                        optionValue: \"2\"\n                    },\n                    {\n                        optionLabel: \"Test 3\",\n                        optionValue: \"3\"\n                    },\n                    {\n                        optionLabel: \"Test 4\",\n                        optionValue: \"4\"\n                    }\n                ]\n            },\n        ],\n        placeholder: \"BESCHREIBUNG DES BILDS EINGEBEN\",\n    };\n    Object.assign(context, getBackAndGenerateButtonContext())\n    return context;\n}\n\nexport const renderStart = async (mode) => {\n    const templateContext = await getTemplateContextStart(mode);\n    await renderModalContent('moodle-modal-body-start', 'moodle-modal-footer-info', templateContext);\n}\n\nexport const renderSummarize = async () => {\n    const templateContext = await getTemplateContextSummarize();\n    await renderModalContent('moodle-modal-body-options', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderTranslate = async () => {\n    const templateContext = await getTemplateContextTranslate();\n    await renderModalContent('moodle-modal-body-options', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderDescribe = async () => {\n    const templateContext = await getTemplateContextDescribe();\n    await renderModalContent('moodle-modal-body-options', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderTts = async () => {\n    const templateContext = await getTemplateContextTts();\n    await renderModalContent('moodle-modal-body-audio', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderAudiogen = async () => {\n    const templateContext = await getTemplateContextAudiogen();\n    await renderModalContent('moodle-modal-body-audio', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderImggen = async () => {\n    const templateContext = await getTemplateContextImggen();\n    await renderModalContent('moodle-modal-body-imggen', 'moodle-modal-footer-generate', templateContext);\n}\n\nexport const renderLoading = async () => {\n    const templateContext = {};\n    templateContext.modal_headline = \"KI GENERIERT\";\n    await renderModalContent('moodle-modal-body-loading', 'moodle-modal-footer-empty', templateContext);\n}\n\nexport const renderSuggestion = async (aiAnswer) => {\n    const templateContext = {};\n    templateContext.modal_headline = \"KI-VORSCHLAG\";\n    templateContext.result_text = aiAnswer;\n    Object.assign(templateContext, getReplaceButtonsContext());\n    await renderModalContent('moodle-modal-body-suggestion', 'moodle-modal-footer-replace', templateContext);\n}\n"],"names":["stringKeys","aiConfig","strings","async","stringRequest","map","key","component","back","generate","hideprompt","mainselection_heading","showprompt","toolname_audiogen","toolname_describe","toolname_describe_extension","toolname_imggen","toolname_summarize","toolname_summarize_extension","toolname_translate","toolname_translate_extension","toolname_tts","toolname_tts_extension","getBackAndGenerateButtonContext","footer_buttons","hasText","button_text","icon_left","icon_right","primary","secondary","tertiary","iconname","iconstyle","action","customicon","getTemplateContextStart","getPurposeConfig","tool","toolPurpose","constants","toolPurposeMapping","purposes","filter","purpose","isToolDisabled","tenantenabled","role","console","log","userlocked","purposeInfo","isconfigured","limitreached","toolButtons","mode","push","description","disabled","buttonContext","isToolHidden","templateContext","showIcon","modal_headline","modal_buttons","Object","assign","input","button","getTemplateContextSummarize","context","modal_dropdowns","dropdown_description","dropdown_default","dropdown_options","optionLabel","optionValue","textareatype","collapsed","controller","getTemplateContextTranslate","getTemplateContextDescribe","getTemplateContextTts","getTemplateContextAudiogen","getTemplateContextImggen","placeholder","result_text","aiAnswer","footer_iconbuttons"],"mappings":"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"}