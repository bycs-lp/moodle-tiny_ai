{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_ai plugin.\n *\n * @module      tiny_ai/commands\n * @copyright   2024, ISB Bayern\n * @author      Dr. Peter Mayer\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {\n    component,\n    toolbarButtonName,\n    selectionbarButtonName,\n    icon,\n    selectionbarSource,\n    toolbarSource,\n    menubarSource\n} from 'tiny_ai/common';\nimport * as Utils from 'tiny_ai/utils';\nimport {prefetchStrings} from 'core/prefetch';\nimport {getString} from 'core/str';\n\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\n// const handleAction = (editor) => {\n//     displayDialogue(editor);\n\n//     // TODO Handle the action.\n//     // window.console.log(editor);\n// };\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    prefetchStrings('tiny_ai', ['toolbarbuttontitle', 'selectionbarbuttontitle']);\n    const [\n        buttonImage,\n        toolbarButtonTitle,\n        selectionbarButtonTitle\n    ] = await Promise.all([\n        getButtonImage('icon', component),\n        getString('toolbarbuttontitle', 'tiny_ai'),\n        getString('selectionbarbuttontitle', 'tiny_ai')\n    ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        Utils.init(editor);\n\n        // Register the AI Toolbar Button.\n        editor.ui.registry.addButton(toolbarButtonName, {\n            icon,\n            tooltip: toolbarButtonTitle,\n            onAction: () => {\n                Utils.displayDialogue(toolbarSource);\n            }\n        });\n\n        // Register the menu item.\n        editor.ui.registry.addMenuItem(toolbarButtonName, {\n            icon,\n            text: toolbarButtonTitle,\n            onAction: () => {\n                Utils.displayDialogue(menubarSource);\n            }\n        });\n\n        editor.ui.registry.addButton(selectionbarButtonName, {\n            icon,\n            tooltip: selectionbarButtonTitle,\n            onAction: () => {\n                Utils.displayDialogue(selectionbarSource);\n            }\n        });\n\n        // editor.on('init', () => onInit(editor));\n        // editor.on('BeforeGetContent', format => onBeforeGetContent(format));\n        // editor.on('submit', () => onSubmit());\n\n    };\n};\n"],"names":["async","buttonImage","toolbarButtonTitle","selectionbarButtonTitle","Promise","all","component","editor","ui","registry","addIcon","icon","html","Utils","init","addButton","toolbarButtonName","tooltip","onAction","displayDialogue","toolbarSource","addMenuItem","text","menubarSource","selectionbarButtonName","selectionbarSource"],"mappings":";;;;;;;;+BAyDwBA,wCACJ,UAAW,CAAC,qBAAsB,kCAE9CC,YACAC,mBACAC,+BACMC,QAAQC,IAAI,EAClB,yBAAe,OAAQC,oBACvB,kBAAU,qBAAsB,YAChC,kBAAU,0BAA2B,oBAGjCC,SAEJA,OAAOC,GAAGC,SAASC,QAAQC,aAAMV,YAAYW,MAE7CC,MAAMC,KAAKP,QAGXA,OAAOC,GAAGC,SAASM,UAAUC,0BAAmB,CAC5CL,KAAAA,aACAM,QAASf,mBACTgB,SAAU,KACNL,MAAMM,gBAAgBC,0BAK9Bb,OAAOC,GAAGC,SAASY,YAAYL,0BAAmB,CAC9CL,KAAAA,aACAW,KAAMpB,mBACNgB,SAAU,KACNL,MAAMM,gBAAgBI,0BAI9BhB,OAAOC,GAAGC,SAASM,UAAUS,+BAAwB,CACjDb,KAAAA,aACAM,QAASd,wBACTe,SAAU,KACNL,MAAMM,gBAAgBM"}