{"version":3,"file":"start.min.js","sources":["../../src/datahandler/start.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {constants} from '../constants';\nimport * as BasedataHandler from 'tiny_ai/datahandler/basedata';\nimport {getAiConfig} from 'local_ai_manager/config';\nimport {getMode} from 'tiny_ai/utils';\n\n\n/**\n * Tiny AI data handler for start page.\n *\n * @module      tiny_ai/datahandler/start\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst StartHandler = new _StartHandler();\n\nclass _StartHandler {\n\n    aiConfig = null;\n\n    async init() {\n        this.aiConfig = await getAiConfig();\n    }\n\n    getPurposeConfig = (tool) => {\n        if (this.aiConfig === null) {\n            throw new Error('Coding error: init function was not called before accessing this.getPurposeConfig!');\n        }\n        const toolPurpose = constants.toolPurposeMapping[tool];\n        return this.aiConfig.purposes.filter(purpose => purpose['purpose'] === toolPurpose)[0];\n    }\n\n    // TODO Test if this logic is correct\n    isToolDisabled = (tool) => {\n        if (!this.aiConfig.tenantenabled && this.aiConfig.role !== 'role_basic') {\n            return true;\n        }\n        if (this.aiConfig.userlocked) {\n            return true;\n        }\n        const purposeInfo = this.getPurposeConfig(tool);\n        if (!purposeInfo.isconfigured && this.aiConfig.role !== 'role_basic') {\n            return true;\n        }\n        if (purposeInfo.limitreached) {\n            return true;\n        }\n        return false;\n    }\n\n    // TODO Test if this logic is correct\n    isToolHidden = (tool) => {\n        if (this.aiConfig.role !== 'role_basic') {\n            return false;\n        }\n        if (!this.aiConfig.tenantenabled) {\n            return true;\n        }\n        const purposeInfo = this.getPurposeConfig(tool);\n        if (!purposeInfo.isconfigured) {\n            return true;\n        }\n        if (purposeInfo.limitreached) {\n            return true;\n        }\n        return false;\n    }\n\n    getTemplateContext() {\n        let toolButtons = [];\n\n        switch (getMode()) {\n            case 'selection':\n                if (!this.isToolHidden('summarize')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_summarize'),\n                        description: BasedataHandler.getTinyAiString('toolname_summarize_extension'),\n                        customicon: true,\n                        iconname: 'shorten',\n                        disabled: this.isToolDisabled('summarize'),\n                        action: 'loadsummarize'\n                    });\n                }\n                if (!this.isToolHidden('translate')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_translate'),\n                        description: BasedataHandler.getTinyAiString('toolname_translate_extension'),\n                        iconname: 'language',\n                        iconstyle: 'solid',\n                        disabled: this.isToolDisabled('translate'),\n                        action: 'loadtranslate'\n                    });\n                }\n                if (!this.isToolHidden('describe')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_describe'),\n                        description: BasedataHandler.getTinyAiString('toolname_describe_extension'),\n                        customicon: true,\n                        iconname: 'extend',\n                        disabled: this.isToolDisabled('describe'),\n                        action: 'loaddescribe'\n                    });\n                }\n                if (!this.isToolHidden('tts')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_tts'),\n                        description: BasedataHandler.getTinyAiString('toolname_tts_extension'),\n                        iconstyle: 'solid',\n                        iconname: 'microphone',\n                        disabled: this.isToolDisabled('tts'),\n                        action: 'loadtts'\n                    });\n                }\n                break;\n            case 'general':\n                if (!this.isToolHidden('tts')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_audiogen'),\n                        iconstyle: 'solid',\n                        iconname: 'microphone',\n                        disabled: this.isToolDisabled('audiogen'),\n                        action: 'loadaudiogen'\n                    });\n                }\n                if (!this.isToolHidden('imggen')) {\n                    toolButtons.push({\n                        tool: BasedataHandler.getTinyAiString('toolname_imggen'),\n                        iconstyle: 'solid',\n                        iconname: 'image',\n                        disabled: this.isToolDisabled('imggen'),\n                        action: 'loadimggen'\n                    });\n                }\n        }\n\n        const templateContext = {\n            showIcon: true,\n            modal_headline: BasedataHandler.getTinyAiString('mainselection_heading'),\n            action: 'loadfreeprompt',\n            modal_buttons: toolButtons,\n        };\n        Object.assign(templateContext, BasedataHandler.getInputContext());\n        return templateContext;\n    }\n}\n\nexport default StartHandler;\n"],"names":["StartHandler","tool","this","aiConfig","Error","toolPurpose","constants","toolPurposeMapping","purposes","filter","purpose","tenantenabled","role","userlocked","purposeInfo","getPurposeConfig","isconfigured","limitreached","getTemplateContext","toolButtons","isToolHidden","push","BasedataHandler","getTinyAiString","description","customicon","iconname","disabled","isToolDisabled","action","iconstyle","templateContext","showIcon","modal_headline","modal_buttons","Object","assign","getInputContext"],"mappings":";;;;;;;;ywBA8BMA,aAAe,wDAIN,+CAMSC,UACM,OAAlBC,KAAKC,eACC,IAAIC,MAAM,4FAEdC,YAAcC,qBAAUC,mBAAmBN,aAC1CC,KAAKC,SAASK,SAASC,QAAOC,SAAWA,QAAO,UAAgBL,cAAa,6CAItEJ,WACTC,KAAKC,SAASQ,eAAwC,eAAvBT,KAAKC,SAASS,YACvC,KAEPV,KAAKC,SAASU,kBACP,QAELC,YAAcZ,KAAKa,iBAAiBd,aACrCa,YAAYE,cAAuC,eAAvBd,KAAKC,SAASS,QAG3CE,YAAYG,qDAOJhB,UACe,eAAvBC,KAAKC,SAASS,YACP,MAENV,KAAKC,SAASQ,qBACR,QAELG,YAAcZ,KAAKa,iBAAiBd,aACrCa,YAAYE,gBAGbF,YAAYG,kCAzCXd,eAAiB,yBA+C1Be,yBACQC,YAAc,WAEV,yBACC,YACIjB,KAAKkB,aAAa,cACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,sBACtCC,YAAaF,gBAAgBC,gBAAgB,gCAC7CE,YAAY,EACZC,SAAU,UACVC,SAAUzB,KAAK0B,eAAe,aAC9BC,OAAQ,kBAGX3B,KAAKkB,aAAa,cACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,sBACtCC,YAAaF,gBAAgBC,gBAAgB,gCAC7CG,SAAU,WACVI,UAAW,QACXH,SAAUzB,KAAK0B,eAAe,aAC9BC,OAAQ,kBAGX3B,KAAKkB,aAAa,aACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,qBACtCC,YAAaF,gBAAgBC,gBAAgB,+BAC7CE,YAAY,EACZC,SAAU,SACVC,SAAUzB,KAAK0B,eAAe,YAC9BC,OAAQ,iBAGX3B,KAAKkB,aAAa,QACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,gBACtCC,YAAaF,gBAAgBC,gBAAgB,0BAC7CO,UAAW,QACXJ,SAAU,aACVC,SAAUzB,KAAK0B,eAAe,OAC9BC,OAAQ,sBAIf,UACI3B,KAAKkB,aAAa,QACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,qBACtCO,UAAW,QACXJ,SAAU,aACVC,SAAUzB,KAAK0B,eAAe,YAC9BC,OAAQ,iBAGX3B,KAAKkB,aAAa,WACnBD,YAAYE,KAAK,CACbpB,KAAMqB,gBAAgBC,gBAAgB,mBACtCO,UAAW,QACXJ,SAAU,QACVC,SAAUzB,KAAK0B,eAAe,UAC9BC,OAAQ,qBAKlBE,gBAAkB,CACpBC,UAAU,EACVC,eAAgBX,gBAAgBC,gBAAgB,yBAChDM,OAAQ,iBACRK,cAAef,oBAEnBgB,OAAOC,OAAOL,gBAAiBT,gBAAgBe,mBACxCN,+BAIA/B"}