{"version":3,"file":"start.min.js","sources":["../../src/datahandler/start.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getString, getStrings} from 'core/str';\nimport {constants} from 'tiny_ai/constants';\nimport * as BasedataHandler from 'tiny_ai/datahandler/basedata';\nimport BaseHandler from 'tiny_ai/datahandler/base';\nimport {getAiConfig} from 'local_ai_manager/config';\nimport {errorAlert, stripHtmlTags} from 'tiny_ai/utils';\n\n\n/**\n * Tiny AI data handler for start page.\n *\n * @module      tiny_ai/datahandler/start\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport default class extends BaseHandler {\n\n    stringKeys = [\n        'error_tenantdisabled',\n        'error_unavailable_noselection',\n        'error_unavailable_selection',\n    ];\n\n    aiConfig = null;\n    strings = new Map();\n\n    async init(contextid) {\n        this.aiConfig = await getAiConfig(contextid);\n        // It's easier to fetch all these strings before even if we do not use them\n        // instead of making all functions async just because of getString returning a promise.\n        const stringRequest = this.stringKeys.map(key => {\n            return {key, component: 'local_ai_manager'};\n        });\n\n        const fetchedStrings = await getStrings(stringRequest);\n        for (let i = 0; i < this.stringKeys.length; i++) {\n            this.strings.set(this.stringKeys[i], fetchedStrings[i]);\n        }\n        const tinyNotAvailableString = await getString('error_tiny_ai_notavailable', 'tiny_ai');\n        this.strings.set('error_editor_notavailable', tinyNotAvailableString);\n    }\n\n    getPurposeConfig(tool) {\n        if (this.aiConfig === null) {\n            throw new Error('Coding error: init function was not called before accessing this.getPurposeConfig!');\n        }\n        const toolPurpose = constants.toolPurposeMapping[tool];\n        return this.aiConfig.purposes.filter(purpose => purpose.purpose === toolPurpose)[0];\n    }\n\n    isTinyAiDisabled() {\n        return this.aiConfig.availability === 'available' ? '' : this.aiConfig.availability.errormessage;\n    }\n\n    isToolDisabled(tool) {\n        if (this.isTinyAiDisabled()) {\n            return this.isTinyAiDisabled();\n        }\n        const purposeInfo = this.getPurposeConfig(tool);\n        return purposeInfo.available === 'available' ? '' : purposeInfo.errormessage;\n    }\n\n    isToolHidden(tool) {\n        const purposeInfo = this.getPurposeConfig(tool);\n        // If the tenant is not allowed the plugin is being disabled completely, so we do not need\n        // to check this case here.\n        if (this.aiConfig.role === 'role_basic') {\n            if (!this.aiConfig.tenantenabled) {\n                return true;\n            }\n            if (!purposeInfo.isconfigured) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getTemplateContext(editorUtils) {\n        let toolButtons = [];\n        if (this.aiConfig.role === 'role_basic' && this.isTinyAiDisabled()) {\n            await errorAlert(await getString('error_tiny_ai_notavailable', 'tiny_ai') + '<br/>'\n                + this.isTinyAiDisabled());\n            editorUtils.getModal().destroy();\n        }\n\n        if (!this.isToolHidden('summarize')) {\n            toolButtons.push({\n                toolname: 'summarize',\n                tool: BasedataHandler.getTinyAiString('toolname_summarize'),\n                customicon: true,\n                iconname: 'shorten',\n                disabled: this.isToolDisabled('summarize').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('summarize')),\n                action: 'loadsummarize'\n            });\n        }\n        if (!this.isToolHidden('translate')) {\n            toolButtons.push({\n                toolname: 'translate',\n                tool: BasedataHandler.getTinyAiString('toolname_translate'),\n                iconname: 'language',\n                iconstyle: 'solid',\n                disabled: this.isToolDisabled('translate').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('translate')),\n                action: 'loadtranslate'\n            });\n        }\n        if (!this.isToolHidden('describe')) {\n            toolButtons.push({\n                toolname: 'describe',\n                tool: BasedataHandler.getTinyAiString('toolname_describe'),\n                customicon: true,\n                iconname: 'extend',\n                disabled: this.isToolDisabled('describe').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('describe')),\n                action: 'loaddescribe'\n            });\n        }\n        if (!this.isToolHidden('tts')) {\n            toolButtons.push({\n                toolname: 'tts',\n                tool: BasedataHandler.getTinyAiString('toolname_tts'),\n                iconstyle: 'solid',\n                iconname: 'microphone',\n                disabled: this.isToolDisabled('tts').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('tts')),\n                action: 'loadtts'\n            });\n        }\n        if (!this.isToolHidden('imggen')) {\n            toolButtons.push({\n                toolname: 'imggen',\n                tool: BasedataHandler.getTinyAiString('toolname_imggen'),\n                iconstyle: 'solid',\n                iconname: 'image',\n                disabled: this.isToolDisabled('imggen').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('imggen')),\n                action: 'loadimggen'\n            });\n        }\n        if (!this.isToolHidden('describeimg')) {\n            toolButtons.push({\n                toolname: 'describeimg',\n                tool: BasedataHandler.getTinyAiString('toolname_describeimg'),\n                iconstyle: 'solid',\n                iconname: 'file-image',\n                disabled: this.isToolDisabled('describeimg').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('describeimg')),\n                action: 'loaddescribeimg'\n            });\n        }\n        if (!this.isToolHidden('imagetotext')) {\n            toolButtons.push({\n                toolname: 'imagetotext',\n                tool: BasedataHandler.getTinyAiString('toolname_imagetotext'),\n                iconstyle: 'solid',\n                iconname: 'signature',\n                disabled: this.isToolDisabled('imagetotext').length > 0,\n                tooltip: stripHtmlTags(this.isToolDisabled('imagetotext')),\n                action: 'loadimagetotext'\n            });\n        }\n        // We sort the not disabled tools to the top while keeping the groups \"disabled tools\" and \"not disabled tools\"\n        // in the same order inside the groups.\n        toolButtons.sort((a, b) => {\n            if (a.disabled && !b.disabled) {\n                return 1;\n            } else if (b.disabled && !a.disabled) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n\n        const templateContext = {\n            showIcon: true,\n            modalHeadline: BasedataHandler.getTinyAiString('mainselection_heading'),\n            action: 'loadfreeprompt',\n            modalButtons: toolButtons,\n            freeprompthidden: true\n        };\n\n        Object.assign(templateContext, BasedataHandler.getInputContext());\n        if (this.isTinyAiDisabled()) {\n            templateContext.input[0].disabled = true;\n            templateContext.input[0].hasError = true;\n            templateContext.input[0].errorMessage = this.isTinyAiDisabled();\n        }\n\n        if (this.isToolDisabled('freeprompt')) {\n            templateContext.input[0].disabled = true;\n        }\n        return templateContext;\n    }\n}\n"],"names":["BaseHandler","Map","contextid","aiConfig","stringRequest","this","stringKeys","map","key","component","fetchedStrings","i","length","strings","set","tinyNotAvailableString","getPurposeConfig","tool","Error","toolPurpose","constants","toolPurposeMapping","purposes","filter","purpose","isTinyAiDisabled","availability","errormessage","isToolDisabled","purposeInfo","available","isToolHidden","role","tenantenabled","isconfigured","editorUtils","toolButtons","getModal","destroy","push","toolname","BasedataHandler","getTinyAiString","customicon","iconname","disabled","tooltip","action","iconstyle","sort","a","b","templateContext","showIcon","modalHeadline","modalButtons","freeprompthidden","Object","assign","getInputContext","input","hasError","errorMessage"],"mappings":"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"}