define("tiny_ai/datahandler/tts",["exports","local_ai_manager/config","tiny_ai/datahandler/basedata","core/config"],(function(_exports,AiConfig,BasedataHandler,_config2){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}
/**
   * Tiny AI data manager.
   *
   * @module      tiny_ai/datahandler/tts
   * @copyright   2024, ISB Bayern
   * @author      Philipp Memmel
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,AiConfig=_interopRequireWildcard(AiConfig),BasedataHandler=_interopRequireWildcard(BasedataHandler),_config2=(obj=_config2)&&obj.__esModule?obj:{default:obj};const TtsHandler=new class{constructor(){_defineProperty(this,"ttsOptions",null),_defineProperty(this,"targetLanguage",null),_defineProperty(this,"voice",null),_defineProperty(this,"gender",null)}async getTargetLanguageOptions(){return await this.loadTtsOptions(),this.ttsOptions.languages}async getVoiceOptions(){return await this.loadTtsOptions(),this.ttsOptions.voices}async getGenderOptions(){return await this.loadTtsOptions(),this.ttsOptions.gender}setTargetLanguage(targetLanguage){this.targetLanguage=targetLanguage}setVoice(voice){this.voice=voice}setGender(gender){this.gender=gender}getOptions(){if(null===this.targetLanguage&&null===this.voice&&null===this.gender)return{};const options={};return this.targetLanguage&&(options.languages=[this.targetLanguage]),this.voice&&(options.voices=[this.voice]),this.gender&&(options.gender=[this.gender]),options}getPrompt(currentTool,selectionText){return"tts"===currentTool?selectionText:""}async loadTtsOptions(){if(null===this.ttsOptions){const fetchedOptions=await AiConfig.getPurposeOptions("tts");this.ttsOptions=JSON.parse(fetchedOptions.options)}}async getTemplateContext(tool){const context={modal_headline:BasedataHandler.getTinyAiString(tool+"_headline"),showIcon:!0,tool:tool},modalDropdowns=[],targetLanguageOptions=await TtsHandler.getTargetLanguageOptions();if(null!==targetLanguageOptions&&Object.keys(targetLanguageOptions).length>0){const targetLanguageDropdownContext={preference:"targetLanguage"};let indexOfLanguageOption=0;targetLanguageOptions.map((entry=>entry.key.startsWith(_config2.default.language))).length>0&&(indexOfLanguageOption=targetLanguageOptions.findIndex((value=>value.key.startsWith(_config2.default.language)))),targetLanguageDropdownContext.dropdown_default=targetLanguageOptions[indexOfLanguageOption].displayname,targetLanguageDropdownContext.dropdown_default_value=targetLanguageOptions[indexOfLanguageOption].key,targetLanguageDropdownContext.dropdown_description=BasedataHandler.getTinyAiString("targetlanguage");const targetLanguageDropdownOptions=[];targetLanguageOptions.forEach((option=>{targetLanguageDropdownOptions.push({optionValue:option.key,optionLabel:option.displayname})})),targetLanguageDropdownContext.dropdown_options=targetLanguageDropdownOptions,modalDropdowns.push(targetLanguageDropdownContext)}const voiceOptions=await TtsHandler.getVoiceOptions();if(null!==voiceOptions&&Object.keys(voiceOptions).length>0){const voiceDropdownContext={preference:"voice"};voiceDropdownContext.dropdown_default=voiceOptions[0].displayname,voiceDropdownContext.dropdown_default_value=voiceOptions[0].key,voiceDropdownContext.dropdown_description=BasedataHandler.getTinyAiString("voice");const voiceDropdownOptions=[];voiceOptions.forEach((option=>{voiceDropdownOptions.push({optionValue:option.key,optionLabel:option.displayname})})),voiceDropdownContext.dropdown_options=voiceDropdownOptions,modalDropdowns.push(voiceDropdownContext)}const genderOptions=await TtsHandler.getGenderOptions();if(null!==genderOptions&&Object.keys(genderOptions).length>0){const genderDropdownContext={preference:"gender"};genderDropdownContext.dropdown_default=genderOptions[0].displayname,genderDropdownContext.dropdown_default_value=genderOptions[0].key,genderDropdownContext.dropdown_description=BasedataHandler.getTinyAiString("gender");const genderDropdownOptions=[];genderOptions.forEach((option=>{genderDropdownOptions.push({optionValue:option.key,optionLabel:option.displayname})})),genderDropdownContext.dropdown_options=genderDropdownOptions,modalDropdowns.push(genderDropdownContext)}return"audiogen"===tool&&modalDropdowns.forEach((dropdownContext=>{dropdownContext.dropup=!0})),Object.assign(context,{modal_dropdowns:modalDropdowns}),Object.assign(context,BasedataHandler.getShowPromptButtonContext()),"audiogen"===tool&&(context.collapsed=!1,context.placeholder=BasedataHandler.getTinyAiString("audiogen_placeholder")),Object.assign(context,BasedataHandler.getBackAndGenerateButtonContext()),context}};var _default=TtsHandler;return _exports.default=_default,_exports.default}));

//# sourceMappingURL=tts.min.js.map