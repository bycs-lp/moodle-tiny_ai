{"version":3,"file":"summarize.min.js","sources":["../../src/datahandler/summarize.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport DataManager from 'tiny_ai/datamanager';\nimport * as BasedataHandler from 'tiny_ai/datahandler/basedata';\nimport {getString} from 'core/str';\n\n/**\n * Tiny AI data manager.\n *\n * @module      tiny_ai/datahandler/summarize\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SummarizeHandler = new _SummarizeHandler();\n\nclass _SummarizeHandler {\n\n    currentTool = null;\n\n    getLanguageTypeOptions() {\n        return {\n            nospeciallanguage: BasedataHandler.getTinyAiString('keeplanguagetype'),\n            simplelanguage: BasedataHandler.getTinyAiString('simplelanguage'),\n            technicallanguage: BasedataHandler.getTinyAiString('technicallanguage'),\n        };\n    }\n\n    getMaxWordCountOptions() {\n        return {\n            0: BasedataHandler.getTinyAiString('nomaxwordcount'),\n            10: '10',\n            20: '20',\n            50: '50',\n            100: '100',\n            200: '200',\n            300: '300'\n        }\n    };\n\n    languageType = null;\n    maxWordCount = 0;\n\n    setMaxWordCount(maxWordCount) {\n        this.maxWordCount = maxWordCount;\n    }\n\n    setLanguageType(languageType) {\n        this.languageType = languageType;\n    }\n\n    async getPrompt() {\n        let prompt = '';\n        if (this.currentTool === 'summarize') {\n            prompt += BasedataHandler.getTinyAiString('summarize_baseprompt');\n        } else if (this.currentTool === 'describe') {\n            prompt += BasedataHandler.getTinyAiString('describe_baseprompt');\n        }\n        if (parseInt(this.maxWordCount) === 0 && this.languageType === 'nospeciallanguage') {\n            return prompt + ': ' + DataManager.getSelectionText();\n        } else {\n            prompt += '. ';\n            if (parseInt(this.maxWordCount) !== 0) {\n                prompt += ' ';\n                prompt += await getString('maxwordcount_prompt', 'tiny_ai', this.maxWordCount);\n                prompt += '.';\n            }\n            if (this.languageType !== 'nospeciallanguage') {\n                prompt += ' ';\n                prompt += await getString('languagetype_prompt', 'tiny_ai', this.getLanguageTypeOptions()[this.languageType]);\n                prompt += '.';\n            }\n            prompt += '\\n';\n            prompt += BasedataHandler.getTinyAiString('texttouse') + ': ' + DataManager.getSelectionText();\n            return prompt;\n        }\n    }\n\n    setTool(currentTool) {\n        this.currentTool = currentTool;\n    }\n\n    /**\n     * Return the template context.\n     *\n     * @param {string} tool the tool to generate the context for, can be 'summarize' or 'describe'\n     */\n    getTemplateContext(tool) {\n        const\n            context = {\n                modal_headline: BasedataHandler.getTinyAiString(tool + '_headline'),\n                showIcon: true,\n                tool: tool,\n            };\n        Object\n            .assign(context, BasedataHandler\n\n                .getShowPromptButtonContext()\n            )\n        ;\n        Object\n            .assign(context, BasedataHandler\n\n                .getBackAndGenerateButtonContext()\n            )\n        ;\n\n        const maxWordCountDropdownContext = {};\n        maxWordCountDropdownContext.preference = 'maxWordCount';\n        maxWordCountDropdownContext.dropdown_default = Object.values(this.getMaxWordCountOptions())[0];\n        maxWordCountDropdownContext.dropdown_default_value = Object.keys(this.getMaxWordCountOptions())[0];\n        maxWordCountDropdownContext.dropdown_description = 'MAXIMALE WORTANZAHL';\n        const maxWordCountDropdownOptions = [];\n\n        for (const [key, value] of Object.entries(this.getMaxWordCountOptions())) {\n            maxWordCountDropdownOptions.push({\n                optionValue: key,\n                optionLabel: value,\n            })\n        }\n\n        delete maxWordCountDropdownOptions[Object.keys(this.getLanguageTypeOptions())[0]]\n        maxWordCountDropdownContext.dropdown_options = maxWordCountDropdownOptions;\n\n        const languageTypeDropdownContext = {};\n        languageTypeDropdownContext.preference = 'languageType';\n        languageTypeDropdownContext.dropdown_default = Object.values(this.getLanguageTypeOptions())[0];\n        languageTypeDropdownContext.dropdown_default_value = Object.keys(this.getLanguageTypeOptions())[0];\n        languageTypeDropdownContext.dropdown_description = 'ART DER SPRACHE';\n        const languageTypeDropdownOptions = [];\n        for (const [key, value] of Object.entries(this.getLanguageTypeOptions())) {\n            languageTypeDropdownOptions.push({\n                optionValue: key,\n                optionLabel: value,\n            })\n        }\n        delete languageTypeDropdownOptions[Object.keys(this.getLanguageTypeOptions)[0]];\n        languageTypeDropdownContext.dropdown_options = languageTypeDropdownOptions;\n\n\n        Object.assign(context, {\n            modal_dropdowns: [\n                maxWordCountDropdownContext,\n                languageTypeDropdownContext,\n            ]\n        });\n\n        return context;\n    }\n}\n\nexport default SummarizeHandler;\n\n\n\n"],"names":["SummarizeHandler","getLanguageTypeOptions","nospeciallanguage","BasedataHandler","getTinyAiString","simplelanguage","technicallanguage","getMaxWordCountOptions","setMaxWordCount","maxWordCount","setLanguageType","languageType","prompt","this","currentTool","parseInt","DataManager","getSelectionText","setTool","getTemplateContext","tool","context","modal_headline","showIcon","Object","assign","getShowPromptButtonContext","getBackAndGenerateButtonContext","maxWordCountDropdownContext","dropdown_default","values","dropdown_default_value","keys","dropdown_description","maxWordCountDropdownOptions","key","value","entries","push","optionValue","optionLabel","dropdown_options","languageTypeDropdownContext","languageTypeDropdownOptions","modal_dropdowns"],"mappings":";;;;;;;;20BA4BMA,iBAAmB,2DAIP,0CAsBC,0CACA,GArBfC,+BACW,CACHC,kBAAmBC,gBAAgBC,gBAAgB,oBACnDC,eAAgBF,gBAAgBC,gBAAgB,kBAChDE,kBAAmBH,gBAAgBC,gBAAgB,sBAI3DG,+BACW,GACAJ,gBAAgBC,gBAAgB,qBAC/B,QACA,QACA,SACC,UACA,UACA,OAObI,gBAAgBC,mBACPA,aAAeA,aAGxBC,gBAAgBC,mBACPA,aAAeA,mCAIhBC,OAAS,SACY,cAArBC,KAAKC,YACLF,QAAUT,gBAAgBC,gBAAgB,wBACd,aAArBS,KAAKC,cACZF,QAAUT,gBAAgBC,gBAAgB,wBAEV,IAAhCW,SAASF,KAAKJ,eAA6C,sBAAtBI,KAAKF,aACnCC,OAAS,KAAOI,qBAAYC,oBAEnCL,QAAU,KAC0B,IAAhCG,SAASF,KAAKJ,gBACdG,QAAU,IACVA,cAAgB,kBAAU,sBAAuB,UAAWC,KAAKJ,cACjEG,QAAU,KAEY,sBAAtBC,KAAKF,eACLC,QAAU,IACVA,cAAgB,kBAAU,sBAAuB,UAAWC,KAAKZ,yBAAyBY,KAAKF,eAC/FC,QAAU,KAEdA,QAAU,KACVA,QAAUT,gBAAgBC,gBAAgB,aAAe,KAAOY,qBAAYC,mBACrEL,QAIfM,QAAQJ,kBACCA,YAAcA,YAQvBK,mBAAmBC,YAEXC,QAAU,CACNC,eAAgBnB,gBAAgBC,gBAAgBgB,KAAO,aACvDG,UAAU,EACVH,KAAMA,MAEdI,OACKC,OAAOJ,QAASlB,gBAEZuB,8BAGTF,OACKC,OAAOJ,QAASlB,gBAEZwB,yCAIHC,4BAA8B,CACpCA,WAAyC,gBACzCA,4BAA4BC,iBAAmBL,OAAOM,OAAOjB,KAAKN,0BAA0B,GAC5FqB,4BAA4BG,uBAAyBP,OAAOQ,KAAKnB,KAAKN,0BAA0B,GAChGqB,4BAA4BK,qBAAuB,4BAC7CC,4BAA8B,OAE/B,MAAOC,IAAKC,SAAUZ,OAAOa,QAAQxB,KAAKN,0BAC3C2B,4BAA4BI,KAAK,CAC7BC,YAAaJ,IACbK,YAAaJ,eAIdF,4BAA4BV,OAAOQ,KAAKnB,KAAKZ,0BAA0B,IAC9E2B,4BAA4Ba,iBAAmBP,kCAEzCQ,4BAA8B,CACpCA,WAAyC,gBACzCA,4BAA4Bb,iBAAmBL,OAAOM,OAAOjB,KAAKZ,0BAA0B,GAC5FyC,4BAA4BX,uBAAyBP,OAAOQ,KAAKnB,KAAKZ,0BAA0B,GAChGyC,4BAA4BT,qBAAuB,wBAC7CU,4BAA8B,OAC/B,MAAOR,IAAKC,SAAUZ,OAAOa,QAAQxB,KAAKZ,0BAC3C0C,4BAA4BL,KAAK,CAC7BC,YAAaJ,IACbK,YAAaJ,sBAGdO,4BAA4BnB,OAAOQ,KAAKnB,KAAKZ,wBAAwB,IAC5EyC,4BAA4BD,iBAAmBE,4BAG/CnB,OAAOC,OAAOJ,QAAS,CACnBuB,gBAAiB,CACbhB,4BACAc,+BAIDrB,uBAIArB"}