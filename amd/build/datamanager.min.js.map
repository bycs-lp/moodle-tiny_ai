{"version":3,"file":"datamanager.min.js","sources":["../src/datamanager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getEditorUtils} from 'tiny_ai/utils';\n\n/**\n * Tiny AI data manager.\n *\n * @module      tiny_ai/datamanager\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport default class DataManager {\n\n    uniqid = null;\n\n    constructor(uniqid) {\n        this.uniqid = uniqid;\n        this.eventEmitterElement = document.createElement('div');\n    }\n\n    currentTool = null;\n    currentAiResult = null;\n    prompt = null;\n    file = null;\n    options = null;\n    selection = null;\n    selectionImg = null;\n\n    getDefaultOptions() {\n        const defaultOptions = {\n            component: 'tiny_ai',\n            itemid: getEditorUtils(this.uniqid).getDraftItemId(),\n            contextid: getEditorUtils(this.uniqid).getContextId()\n        };\n        if (['tts', 'audiogen'].includes(this.getCurrentTool())) {\n            defaultOptions.filename = 'audio_' + Math.random().toString(16).slice(2) + '.mp3';\n        } else if (this.getCurrentTool() === 'imggen') {\n            defaultOptions.filename = 'img_' + Math.random().toString(16).slice(2) + '.png';\n        }\n        return defaultOptions;\n    }\n\n    setCurrentTool(currentTool) {\n        this.currentTool = currentTool;\n    }\n\n    getCurrentTool() {\n        return this.currentTool;\n    }\n\n    setCurrentPrompt(prompt) {\n        this.prompt = prompt;\n        const promptUpdatedEvent = new CustomEvent('promptUpdated', {\n            detail: {\n                newPrompt: prompt\n            }\n        });\n        this.eventEmitterElement.dispatchEvent(promptUpdatedEvent);\n    }\n\n    getCurrentPrompt() {\n        return this.prompt;\n\n    }\n\n    setCurrentFile(file) {\n        this.file = file;\n    }\n\n    getCurrentFile() {\n        return this.file;\n\n    }\n\n    getSelection() {\n        return this.selection;\n    }\n\n    getSelectionText() {\n        const span = document.createElement('span');\n        span.innerHTML = this.selection;\n        return span.textContent;\n    }\n\n    setSelection(selection) {\n        this.selection = selection;\n    }\n\n    getSelectionImg() {\n        return this.selectionImg;\n    }\n\n    setSelectionImg(image) {\n        this.selectionImg = image;\n    }\n\n    getEventEmitterElement() {\n        return this.eventEmitterElement;\n    }\n\n    setCurrentAiResult(aiResult) {\n        this.currentAiResult = aiResult;\n    }\n\n    getCurrentAiResult() {\n        return this.currentAiResult;\n    }\n\n    setCurrentOptions(options) {\n        this.options = options;\n    }\n\n    getCurrentOptions() {\n        const optionsToReturn = this.options === null ? {} : this.options;\n        Object.assign(optionsToReturn, this.getDefaultOptions());\n        return optionsToReturn;\n    }\n\n    reset() {\n        this.setCurrentPrompt('');\n        this.setCurrentOptions(null);\n        this.setCurrentTool(null);\n        this.setCurrentAiResult(null);\n        this.setCurrentFile(null);\n    }\n}\n"],"names":["constructor","uniqid","eventEmitterElement","document","createElement","getDefaultOptions","defaultOptions","component","itemid","this","getDraftItemId","contextid","getContextId","includes","getCurrentTool","filename","Math","random","toString","slice","setCurrentTool","currentTool","setCurrentPrompt","prompt","promptUpdatedEvent","CustomEvent","detail","newPrompt","dispatchEvent","getCurrentPrompt","setCurrentFile","file","getCurrentFile","getSelection","selection","getSelectionText","span","innerHTML","textContent","setSelection","getSelectionImg","selectionImg","setSelectionImg","image","getEventEmitterElement","setCurrentAiResult","aiResult","currentAiResult","getCurrentAiResult","setCurrentOptions","options","getCurrentOptions","optionsToReturn","Object","assign","reset"],"mappings":";;;;;;;;mHA8BIA,YAAYC,sCAFH,yCAOK,6CACI,oCACT,kCACF,qCACG,uCACE,0CACG,WAVNA,OAASA,YACTC,oBAAsBC,SAASC,cAAc,OAWtDC,0BACUC,eAAiB,CACnBC,UAAW,UACXC,QAAQ,yBAAeC,KAAKR,QAAQS,iBACpCC,WAAW,yBAAeF,KAAKR,QAAQW,sBAEvC,CAAC,MAAO,YAAYC,SAASJ,KAAKK,kBAClCR,eAAeS,SAAW,SAAWC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAAK,OAC1C,WAA1BV,KAAKK,mBACZR,eAAeS,SAAW,OAASC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAAK,QAEtEb,eAGXc,eAAeC,kBACNA,YAAcA,YAGvBP,wBACWL,KAAKY,YAGhBC,iBAAiBC,aACRA,OAASA,aACRC,mBAAqB,IAAIC,YAAY,gBAAiB,CACxDC,OAAQ,CACJC,UAAWJ,eAGdrB,oBAAoB0B,cAAcJ,oBAG3CK,0BACWpB,KAAKc,OAIhBO,eAAeC,WACNA,KAAOA,KAGhBC,wBACWvB,KAAKsB,KAIhBE,sBACWxB,KAAKyB,UAGhBC,yBACUC,KAAOjC,SAASC,cAAc,eACpCgC,KAAKC,UAAY5B,KAAKyB,UACfE,KAAKE,YAGhBC,aAAaL,gBACJA,UAAYA,UAGrBM,yBACW/B,KAAKgC,aAGhBC,gBAAgBC,YACPF,aAAeE,MAGxBC,gCACWnC,KAAKP,oBAGhB2C,mBAAmBC,eACVC,gBAAkBD,SAG3BE,4BACWvC,KAAKsC,gBAGhBE,kBAAkBC,cACTA,QAAUA,QAGnBC,0BACUC,gBAAmC,OAAjB3C,KAAKyC,QAAmB,GAAKzC,KAAKyC,eAC1DG,OAAOC,OAAOF,gBAAiB3C,KAAKJ,qBAC7B+C,gBAGXG,aACSjC,iBAAiB,SACjB2B,kBAAkB,WAClB7B,eAAe,WACfyB,mBAAmB,WACnBf,eAAe"}