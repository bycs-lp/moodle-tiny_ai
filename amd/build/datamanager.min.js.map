{"version":3,"file":"datamanager.min.js","sources":["../src/datamanager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport SELECTORS from 'tiny_ai/selectors';\n\n/**\n * Tiny AI data manager.\n *\n * @module      tiny_ai/datamanager\n * @copyright   2024, ISB Bayern\n * @author      Philipp Memmel\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst DataManager = new _DataManager();\n\nclass _DataManager {\n\n    constructor() {\n        this.eventEmitterElement = document.createElement('div');\n    }\n\n    currentTool = null;\n    currentAiResult = null;\n    prompt = null;\n\n    setCurrentTool(currentTool) {\n        this.currentTool = currentTool;\n    }\n\n    getCurrentTool() {\n        return this.currentTool;\n    }\n\n    setCurrentPrompt(prompt) {\n        this.prompt = prompt;\n        const promptUpdatedEvent = new CustomEvent('promptUpdated', {\n            detail: {\n                newPrompt: prompt\n            }\n        });\n        this.eventEmitterElement.dispatchEvent(promptUpdatedEvent);\n    }\n\n    getCurrentPrompt() {\n        return this.prompt;\n\n    }\n\n    getSelection() {\n        return this.selection;\n    }\n\n    getSelectionText() {\n        const span = document.createElement('span');\n        span.innerHTML = this.selection;\n        return span.textContent;\n    }\n\n    setSelection(selection) {\n        this.selection = selection;\n    }\n\n    getEventEmitterElement() {\n        return this.eventEmitterElement;\n    }\n\n    setCurrentAiResult(aiResult) {\n        this.currentAiResult = aiResult;\n    }\n\n    getCurrentAiResult() {\n        return this.currentAiResult;\n    }\n}\n\nexport default DataManager;\n\n\n\n"],"names":["DataManager","constructor","eventEmitterElement","document","createElement","setCurrentTool","currentTool","getCurrentTool","this","setCurrentPrompt","prompt","promptUpdatedEvent","CustomEvent","detail","newPrompt","dispatchEvent","getCurrentPrompt","getSelection","selection","getSelectionText","span","innerHTML","textContent","setSelection","getEventEmitterElement","setCurrentAiResult","aiResult","currentAiResult","getCurrentAiResult"],"mappings":";;;;;;;;yJA0BMA,YAAc,UAIhBC,iDAIc,6CACI,oCACT,WALAC,oBAAsBC,SAASC,cAAc,OAOtDC,eAAeC,kBACNA,YAAcA,YAGvBC,wBACWC,KAAKF,YAGhBG,iBAAiBC,aACRA,OAASA,aACRC,mBAAqB,IAAIC,YAAY,gBAAiB,CACxDC,OAAQ,CACJC,UAAWJ,eAGdR,oBAAoBa,cAAcJ,oBAG3CK,0BACWR,KAAKE,OAIhBO,sBACWT,KAAKU,UAGhBC,yBACUC,KAAOjB,SAASC,cAAc,eACpCgB,KAAKC,UAAYb,KAAKU,UACfE,KAAKE,YAGhBC,aAAaL,gBACJA,UAAYA,UAGrBM,gCACWhB,KAAKN,oBAGhBuB,mBAAmBC,eACVC,gBAAkBD,SAG3BE,4BACWpB,KAAKmB,+BAIL3B"}