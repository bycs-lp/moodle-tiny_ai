define("tiny_ai/commands",["exports","editor_tiny/utils","tiny_ai/common","tiny_ai/utils","core/prefetch","core/str"],(function(_exports,_utils,_common,Utils,_prefetch,_str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,Utils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * Commands helper for the Moodle tiny_ai plugin.
   *
   * @module      tiny_ai/commands
   * @copyright   2024, ISB Bayern
   * @author      Dr. Peter Mayer
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Utils);_exports.getSetup=async()=>{(0,_prefetch.prefetchStrings)("tiny_ai",["toolbarbuttontitle","selectionbarbuttontitle"]);const[buttonImage,toolbarButtonTitle,selectionbarButtonTitle]=await Promise.all([(0,_utils.getButtonImage)("icon",_common.component),(0,_str.getString)("toolbarbuttontitle","tiny_ai"),(0,_str.getString)("selectionbarbuttontitle","tiny_ai")]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html);const uniqid=Math.random().toString(16).slice(2);Utils.init(uniqid,editor),editor.ui.registry.addButton(_common.toolbarButtonName,{icon:_common.icon,tooltip:toolbarButtonTitle,onAction:()=>{Utils.getEditorUtils(uniqid).displayDialogue(_common.toolbarSource)}}),editor.ui.registry.addMenuItem(_common.toolbarButtonName,{icon:_common.icon,text:toolbarButtonTitle,onAction:()=>{Utils.getEditorUtils(uniqid).displayDialogue(_common.menubarSource)}}),editor.ui.registry.addButton(_common.selectionbarButtonName,{icon:_common.icon,tooltip:selectionbarButtonTitle,onAction:()=>{Utils.getEditorUtils(uniqid).displayDialogue(_common.selectionbarSource)}})}}}));

//# sourceMappingURL=commands.min.js.map